/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package funcionarios;

import interfaces.DAOFuncionarioImplements;
import javax.swing.JOptionPane;
import funcionarios.Funcionario;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author User
 */
public class Diseño extends javax.swing.JFrame {

    /**
     * Creates new form Diseño
     */
    public Diseño() {
        initComponents();
        
    }
    
    //FUNCIÓN LIMPIAR para dejar los valores predeterminados de la pantalla
    private void limpiar(){
        textBox_IDFuncionario.setText("");
        textBox_ContactoFuncionario.setText("");
        textBox_NombresFuncionario.setText("");
        textBox_DireccionFuncionario1.setText("");
        textBox_ApellidosFuncionario.setText("");
        textBox_FechaNaFuncionario.setText("");
        textBox_ContactoFuncionario.setText("");
        textBox_NumeroIdentificacion.setText("");
        CBoxEstadoCivil.setSelectedItem("--Seleccionar--");
        CBoxTipoIdentificacion.setSelectedItem("--Seleccionar--");
        CBoxSexo.setSelectedItem("--Seleccionar--");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        Funcionario_ID = new javax.swing.JLabel();
        Funcionario_ID1 = new javax.swing.JLabel();
        Funcionario_ID2 = new javax.swing.JLabel();
        Funcionario_ID3 = new javax.swing.JLabel();
        Funcionario_ID4 = new javax.swing.JLabel();
        CBoxTipoIdentificacion = new javax.swing.JComboBox<>();
        Funcionario_ID5 = new javax.swing.JLabel();
        Funcionario_ID6 = new javax.swing.JLabel();
        CBoxEstadoCivil = new javax.swing.JComboBox<>();
        Funcionario_ID8 = new javax.swing.JLabel();
        Funcionario_ID9 = new javax.swing.JLabel();
        textBox_IDFuncionario = new javax.swing.JTextField();
        textBox_NombresFuncionario = new javax.swing.JTextField();
        textBox_ApellidosFuncionario = new javax.swing.JTextField();
        textBox_FechaNaFuncionario = new javax.swing.JTextField();
        textBox_NumeroIdentificacion = new javax.swing.JTextField();
        textBox_ContactoFuncionario = new javax.swing.JTextField();
        textBox_DireccionFuncionario1 = new javax.swing.JTextField();
        Funcionario_ID7 = new javax.swing.JLabel();
        Button_Registrar = new javax.swing.JButton();
        ButtonActualizar = new javax.swing.JButton();
        ButtonEliminar = new javax.swing.JButton();
        ButtonBuscar = new javax.swing.JButton();
        CBoxSexo = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextField1.setBackground(new java.awt.Color(102, 204, 255));
        jTextField1.setText("FUNCIONARIOS CRUD DAO");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        Funcionario_ID.setText("ID Funcionario");

        Funcionario_ID1.setText("Nombres");

        Funcionario_ID2.setText("Fecha de Nacimiento");

        Funcionario_ID3.setText("Apellidos");

        Funcionario_ID4.setText("Tipo de Identificación");

        CBoxTipoIdentificacion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Seleccionar--", "Tarjeta de identidad", "Cedula de ciudadanía", "Pasaporte", "Otro" }));
        CBoxTipoIdentificacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CBoxTipoIdentificacionActionPerformed(evt);
            }
        });

        Funcionario_ID5.setText("Estado Civil");

        Funcionario_ID6.setText("Dirección");

        CBoxEstadoCivil.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Seleccionar--", "Soltero", "Casado" }));
        CBoxEstadoCivil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CBoxEstadoCivilActionPerformed(evt);
            }
        });

        Funcionario_ID8.setText("Contacto");

        Funcionario_ID9.setText("Sexo");

        textBox_IDFuncionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textBox_IDFuncionarioActionPerformed(evt);
            }
        });

        Funcionario_ID7.setText("Número de identificación");

        Button_Registrar.setText("REGISTRAR");
        Button_Registrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button_RegistrarActionPerformed(evt);
            }
        });

        ButtonActualizar.setText("ACTUALIZAR");
        ButtonActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonActualizarActionPerformed(evt);
            }
        });

        ButtonEliminar.setText("ELIMINAR");
        ButtonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonEliminarActionPerformed(evt);
            }
        });

        ButtonBuscar.setText("BUSCAR");
        ButtonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonBuscarActionPerformed(evt);
            }
        });

        CBoxSexo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Seleccionar--", "Masculino", "Femenino", "Prefiero no decirlo" }));
        CBoxSexo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CBoxSexoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Funcionario_ID6)
                                    .addComponent(Funcionario_ID5))
                                .addGap(103, 103, 103)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(textBox_DireccionFuncionario1, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(CBoxEstadoCivil, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Funcionario_ID4)
                                    .addComponent(Funcionario_ID7)
                                    .addComponent(Funcionario_ID8)
                                    .addComponent(Funcionario_ID9)
                                    .addComponent(Funcionario_ID2)
                                    .addComponent(Funcionario_ID3)
                                    .addComponent(Funcionario_ID1)
                                    .addComponent(Funcionario_ID))
                                .addGap(29, 29, 29)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(textBox_IDFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(textBox_NombresFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(textBox_ApellidosFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(textBox_FechaNaFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(textBox_ContactoFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(textBox_NumeroIdentificacion, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(CBoxTipoIdentificacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(CBoxSexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(37, 37, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(ButtonActualizar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Button_Registrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ButtonEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ButtonBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 109, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Funcionario_ID)
                    .addComponent(textBox_IDFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Funcionario_ID1)
                    .addComponent(textBox_NombresFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Button_Registrar))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Funcionario_ID3)
                    .addComponent(textBox_ApellidosFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Funcionario_ID2)
                    .addComponent(textBox_FechaNaFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ButtonActualizar))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Funcionario_ID4)
                    .addComponent(CBoxTipoIdentificacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Funcionario_ID7)
                            .addComponent(textBox_NumeroIdentificacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(ButtonEliminar)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(ButtonBuscar))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Funcionario_ID5)
                            .addComponent(CBoxEstadoCivil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Funcionario_ID6)
                            .addComponent(textBox_DireccionFuncionario1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Funcionario_ID8)
                    .addComponent(textBox_ContactoFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Funcionario_ID9)
                    .addComponent(CBoxSexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void CBoxEstadoCivilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CBoxEstadoCivilActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CBoxEstadoCivilActionPerformed

    private void textBox_IDFuncionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textBox_IDFuncionarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textBox_IDFuncionarioActionPerformed
    
    //BOTON REGISTRAR
    private void Button_RegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button_RegistrarActionPerformed
        DAOFuncionarioImplements funcionarioDao = new DAOFuncionarioImplements();
        Funcionario funcionario = new Funcionario();
        
        if(textBox_ApellidosFuncionario.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Por favor ingrese un id");
        }else if(textBox_ApellidosFuncionario.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Por favor ingrese los apellidos");
        }else if(textBox_NombresFuncionario.getText().equals("")){
            JOptionPane.showMessageDialog(null,"Por favor ingrese los nombres");
        }else if(textBox_DireccionFuncionario1.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Por favor ingrese la dirección");
        }else if(textBox_FechaNaFuncionario.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Por favor ingrese la fecha de nacimiento");
        }else if(textBox_ContactoFuncionario.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Por favor ingrese el número de contacto");
        }else if(textBox_NumeroIdentificacion.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Por favor ingrese el número de identificación");
        }else{
            int id = Integer.parseInt(textBox_IDFuncionario.getText());
            String nombres = textBox_NombresFuncionario.getText();
            String apellidos = textBox_ApellidosFuncionario.getText();
            String fechaNacimiento = textBox_FechaNaFuncionario.getText();
            int tipoIdentificacion = CBoxTipoIdentificacion.getSelectedIndex();
            int numeroIdentificacion = Integer.parseInt(textBox_NumeroIdentificacion.getText());
            int estadoCivil = CBoxEstadoCivil.getSelectedIndex();
            String direccion = textBox_DireccionFuncionario1.getText();
            int contacto = Integer.parseInt(textBox_ContactoFuncionario.getText());
            int sexo = CBoxSexo.getSelectedIndex();
            
            
            switch (tipoIdentificacion) {
                case 1 -> {
                    String a = "Tarjeta de identidad";
                    funcionario.setTipo_identificacion(a);
                }
                case 2 -> {
                    String a = "Cedula de ciudadanía";
                    funcionario.setTipo_identificacion(a);
                }
                case 3 -> {
                    String a = "Pasaporte";
                    funcionario.setTipo_identificacion(a);
                }
                default -> {
                }
            }

            switch (estadoCivil) {

                case 1 -> {
                    String a = "Soltero";
                    funcionario.setEstado_civil(a);
                }
                case 2 -> {
                    String a = "Casado";
                    funcionario.setEstado_civil(a);
                }
                default -> {
                }
            }
           
            switch (sexo){
                
                case 1 ->{
                    String a = "Masculino";
                    funcionario.setSexo(a);
                    break;
                }
                case 2 -> {
                    String a = "Femenino";
                    funcionario.setSexo(a);
                    break;
                }
                default -> {
                    break;
                }
                    
            }
            funcionario.setId(id);
            funcionario.setNombres(nombres);
            funcionario.setApellidos(apellidos);
            funcionario.setFecha_nacimiento(fechaNacimiento);
            funcionario.setNumero_identificacion(numeroIdentificacion);         
            funcionario.setDireccion(direccion);
            funcionario.setTelefono(contacto);
            
            
          
            try {
                funcionarioDao.registrar(funcionario);
            } catch (SQLException ex) {
                Logger.getLogger(Diseño.class.getName()).log(Level.SEVERE, null, ex);
            }
            limpiar();
            JOptionPane.showMessageDialog(null, "Registro Exitoso!");
            
        }
        
    }//GEN-LAST:event_Button_RegistrarActionPerformed

    private void CBoxTipoIdentificacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CBoxTipoIdentificacionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CBoxTipoIdentificacionActionPerformed

    private void CBoxSexoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CBoxSexoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CBoxSexoActionPerformed
    
    // BOTÓN BUSCAR
    private void ButtonBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonBuscarActionPerformed
        DAOFuncionarioImplements funcionarioDao = new DAOFuncionarioImplements();
        Funcionario funcionario = new Funcionario();
        
         if(textBox_IDFuncionario.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Por favor digite el NIT a buscar");
        }else{
             int id = Integer.parseInt(textBox_IDFuncionario.getText());
             funcionario.setId(id);
         }
        try {
            funcionarioDao.buscar(funcionario);
        } catch (SQLException ex) {
            Logger.getLogger(Diseño.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        textBox_IDFuncionario.setText(String.valueOf(funcionario.getId()));
        textBox_NombresFuncionario.setText(funcionario.getNombres());
        textBox_ApellidosFuncionario.setText(funcionario.getApellidos());
        textBox_FechaNaFuncionario.setText(funcionario.getFecha_nacimiento());
        textBox_NumeroIdentificacion.setText(String.valueOf(funcionario.getNumero_identificacion()));
        textBox_DireccionFuncionario1.setText(funcionario.getDireccion());
        textBox_ContactoFuncionario.setText(String.valueOf(funcionario.getTelefono()));
        CBoxTipoIdentificacion.setSelectedItem(funcionario.getTipo_identificacion());
        CBoxEstadoCivil.setSelectedItem(funcionario.getEstado_civil());
        CBoxSexo.setSelectedItem(funcionario.getSexo());
        JOptionPane.showMessageDialog(null, "Registro encontrado!!");
    }//GEN-LAST:event_ButtonBuscarActionPerformed
    
    //BOTON ELIMINAR
    private void ButtonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonEliminarActionPerformed
        DAOFuncionarioImplements funcionarioDAO = new DAOFuncionarioImplements();
        Funcionario funcionario = new Funcionario();
        
        if(textBox_IDFuncionario.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Por favor ingrese un ID");
        }
        else{
            int id = Integer.parseInt(textBox_IDFuncionario.getText());
            funcionario.setId(id);
            try {
                funcionarioDAO.eliminar(funcionario);
            } catch (SQLException ex) {
                Logger.getLogger(Diseño.class.getName()).log(Level.SEVERE, null, ex);
            }
            limpiar();
            JOptionPane.showMessageDialog(null, "Registro Eliminado!");
        }
    }//GEN-LAST:event_ButtonEliminarActionPerformed
    //BOTON ACTUALIZAR
    private void ButtonActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonActualizarActionPerformed
        DAOFuncionarioImplements funcionarioDao = new DAOFuncionarioImplements();
        Funcionario funcionario = new Funcionario();
        
        if(textBox_ApellidosFuncionario.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Por favor ingrese un id");
        }else if(textBox_ApellidosFuncionario.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Por favor ingrese los apellidos");
        }else if(textBox_NombresFuncionario.getText().equals("")){
            JOptionPane.showMessageDialog(null,"Por favor ingrese los nombres");
        }else if(textBox_DireccionFuncionario1.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Por favor ingrese la dirección");
        }else if(textBox_FechaNaFuncionario.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Por favor ingrese la fecha de nacimiento");
        }else if(textBox_ContactoFuncionario.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Por favor ingrese el número de contacto");
        }else if(textBox_NumeroIdentificacion.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Por favor ingrese el número de identificación");
        }else{
            int id = Integer.parseInt(textBox_IDFuncionario.getText());
            String nombres = textBox_NombresFuncionario.getText();
            String apellidos = textBox_ApellidosFuncionario.getText();
            String fechaNacimiento = textBox_FechaNaFuncionario.getText();
            int tipoIdentificacion = CBoxTipoIdentificacion.getSelectedIndex();
            int numeroIdentificacion = Integer.parseInt(textBox_NumeroIdentificacion.getText());
            int estadoCivil = CBoxEstadoCivil.getSelectedIndex();
            String direccion = textBox_DireccionFuncionario1.getText();
            int contacto = Integer.parseInt(textBox_ContactoFuncionario.getText());
            int sexo = CBoxSexo.getSelectedIndex();
            
            
            switch (tipoIdentificacion) {
                case 1 -> {
                    String a = "Tarjeta de identidad";
                    funcionario.setTipo_identificacion(a);
                }
                case 2 -> {
                    String a = "Cedula de ciudadanía";
                    funcionario.setTipo_identificacion(a);
                }
                case 3 -> {
                    String a = "Pasaporte";
                    funcionario.setTipo_identificacion(a);
                }
                default -> {
                }
            }

            switch (estadoCivil) {

                case 1 -> {
                    String a = "Soltero";
                    funcionario.setEstado_civil(a);
                }
                case 2 -> {
                    String a = "Casado";
                    funcionario.setEstado_civil(a);
                }
                default -> {
                }
            }
           
            switch (sexo){
                
                case 1 ->{
                    String a = "Masculino";
                    funcionario.setSexo(a);
                    break;
                }
                case 2 -> {
                    String a = "Femenino";
                    funcionario.setSexo(a);
                    break;
                }
                default -> {
                    break;
                }
                    
            }
            funcionario.setId(id);
            funcionario.setNombres(nombres);
            funcionario.setApellidos(apellidos);
            funcionario.setFecha_nacimiento(fechaNacimiento);
            funcionario.setNumero_identificacion(numeroIdentificacion);         
            funcionario.setDireccion(direccion);
            funcionario.setTelefono(contacto);
            
            
            
          
            try {
                funcionarioDao.actualizar(funcionario);
            } catch (SQLException ex) {
                Logger.getLogger(Diseño.class.getName()).log(Level.SEVERE, null, ex);
            }
            limpiar();
            JOptionPane.showMessageDialog(null, "Actualización Exitosa!");
            
        }
        
    }//GEN-LAST:event_ButtonActualizarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Diseño.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Diseño.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Diseño.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Diseño.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Diseño().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtonActualizar;
    private javax.swing.JButton ButtonBuscar;
    private javax.swing.JButton ButtonEliminar;
    private javax.swing.JButton Button_Registrar;
    private javax.swing.JComboBox<String> CBoxEstadoCivil;
    private javax.swing.JComboBox<String> CBoxSexo;
    private javax.swing.JComboBox<String> CBoxTipoIdentificacion;
    private javax.swing.JLabel Funcionario_ID;
    private javax.swing.JLabel Funcionario_ID1;
    private javax.swing.JLabel Funcionario_ID2;
    private javax.swing.JLabel Funcionario_ID3;
    private javax.swing.JLabel Funcionario_ID4;
    private javax.swing.JLabel Funcionario_ID5;
    private javax.swing.JLabel Funcionario_ID6;
    private javax.swing.JLabel Funcionario_ID7;
    private javax.swing.JLabel Funcionario_ID8;
    private javax.swing.JLabel Funcionario_ID9;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField textBox_ApellidosFuncionario;
    private javax.swing.JTextField textBox_ContactoFuncionario;
    private javax.swing.JTextField textBox_DireccionFuncionario1;
    private javax.swing.JTextField textBox_FechaNaFuncionario;
    private javax.swing.JTextField textBox_IDFuncionario;
    private javax.swing.JTextField textBox_NombresFuncionario;
    private javax.swing.JTextField textBox_NumeroIdentificacion;
    // End of variables declaration//GEN-END:variables
}
